name: ci

on:
  push:
    branches:
    - "*"  # run for branches
    tags:
    - "*"  # run for tags
  pull_request:
    branches:
    - "*"  # run for branches
    tags:
    - "*"  # run for tags

jobs:
  deployments-tests:
    runs-on: ubuntu-latest
    env:
      kind-version: 'v0.10.0'
      kind-image: 'kindest/node:v1.20.0'
    steps:
    - uses: actions/checkout@v2
    - name: Start KinD
      uses: engineerd/setup-kind@v0.5.0
      with:
        version: ${{ env.kind-version }}
        image: ${{ env.kind-image }}
    - name: Wait cluster to start
      run: |
        until [ "$(kubectl get pods -A --no-headers | grep -cEv '([0-9]+)/\1')" -eq 0 ]; do
            sleep 5s
        done
        kubectl get pod -A
    - name: Run and test Complete demo
      run: |
        kubectl apply -f deploy/kubernetes/complete-demo.yaml
        until [ "$(kubectl get pods -n sock-shop --no-headers | grep -cEv '([0-9]+)/\1')" -eq 0 ]; do
            sleep 5s
        done

  build-test-images:
    if: startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    env:
      GROUP: weaveworksdemos 
    strategy:
      matrix:
        repo: ["openapi", "healthcheck"]
    steps:
    - uses: actions/checkout@v2

    #
    #
    # Push to dockerhub
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASS }}

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: ${{ matrix.repo }}
        push: true
        tags: ${{ env.GROUP }}/${{ matrix.repo }}:${{ github.sha }}
